class Solution {
    public int findLongestChain(int[][] pairs) {
         Arrays.sort(pairs, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return new Integer(o1[0]).compareTo(new Integer(o2[0]));
            }
        });

//        for(int[] row:pairs)
//        {
//            for(int c : row){
//                System.out.print(c + " ");
//            }
//            System.out.println();
//        }

        //System.out.println(pairs.length);

        int[] mc = new int[pairs.length];

        for(int i=0;i<pairs.length;i++)
        {
            mc[i] = 1;
        }


        for(int i=1;i<pairs.length;i++)
        {
            for(int j=0;j<i;j++)
            {
                if(pairs[i][0] > pairs[j][1])
                {
                    mc[i]=Math.max(mc[i],mc[j]+1);
                }
            }
        }

        int max=0;
        for(int k=0;k<pairs.length;k++)
        {
            //System.out.print(mc[k] + " ");
            if(mc[k]>max)
            {
                max=mc[k];
            }

        }
        return mc[pairs.length-1];
    }
}
